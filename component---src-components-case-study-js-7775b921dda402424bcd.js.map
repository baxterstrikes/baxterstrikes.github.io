{"version":3,"sources":["webpack:///./src/components/case_study/overview.js","webpack:///./src/components/case_study/section.js","webpack:///./src/components/case-study.js"],"names":["AtAGlance","title","lis","items","map","item","i","className","key","class","ProblemStatement","problem","solution","Overview","overview","images","image","fluid","childImageSharp","areasOfFocus","importantDetails","Title","content","boldMatcher","MarkBolded","line","split","pre","b","post","Introduction","body","paragraph","Changes","changes","from","to","OrderedList","Lists","lists","itemSet","ImageExhibition","rows","summary","style","imageRows","row","j","LightBulb","viewBox","fill","xmlns","d","KeyInsights","insightSet","insights","IdentifyIssues","issuesSet","issues","prompt","ProcessionalGuide","Section","contents","section","type","pageQuery","CaseStudy","data","pageContext","caseStudy","allContentYaml","edges","edge","node","sections","next","path","text"],"mappings":"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","file":"component---src-components-case-study-js-7775b921dda402424bcd.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nconst AtAGlance = ({ title, items }) => {\n    const lis = items.map((item, i) =>\n        <li\n            className=\"my-4 sm:mr-8\"\n            key={title + i}>\n            {item}\n        </li>\n    )\n    return (\n        <div class=\"sm:w-1/2\">\n            <h4 className=\"sm:mt-4 mt-8 mb-4\">{title}</h4>\n            <ul>\n                {lis}\n            </ul>\n        </div>\n    )\n}\n\nconst ProblemStatement = ({ problem, solution }) =>\n    <>\n        <div className=\"mt-8 mb-4 text-B1 sm:w-2/3\">\n            <div className=\"inline font-bold\">Problem: </div>\n            <p className=\"inline\">{problem}</p>\n        </div>\n        <div className=\"mt-8 mb-4 text-B1 sm:w-2/3\">\n            <div className=\"inline font-bold\">Solution: </div>\n            <p className=\"inline\">{solution}</p>\n        </div>\n    </>\n\nconst Overview = ({ overview, title }) => {\n    const images = overview.image.map((image) =>\n        <div className=\"w-1/4 pr-8\">\n            <Img fluid={image.childImageSharp.fluid} />\n        </div>\n    )\n    return (\n        <>\n            <div className=\"mt-8 mb-4 flex w-full h-full\">\n                {images}\n            </div>\n\n            <h1 className=\"my-4\">{title}</h1>\n\n            <div className=\"sm:flex\">\n                <AtAGlance\n                    title=\"Areas of Focus\"\n                    items={overview.areasOfFocus} />\n\n                <AtAGlance\n                    title=\"Important Details\"\n                    items={overview.importantDetails} />\n\n            </div>\n\n            <ProblemStatement\n                problem={overview.problem}\n                solution={overview.solution} />\n        </>\n    )\n}\n\nexport const overviewFragment = graphql`\n  fragment Overview on ContentYaml {\n    overview {\n        image {\n            childImageSharp {\n                fluid(maxWidth: 1280) {\n                    ...GatsbyImageSharpFluid\n                }\n                fixed(width: 200) {\n                    ...GatsbyImageSharpFixed\n                }\n            }\n        }\n        areasOfFocus\n        importantDetails\n        problem\n        solution\n      }\n  }\n`\n\nexport default Overview\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nconst Title = ({ content }) => (\n    <h2 className=\"mt-16 mb-8\">{content.title}</h2>\n)\n\nconst boldMatcher = /\\*\\*(.+)\\*\\*/gi;\n\nconst MarkBolded = ({ content }) =>\n    (content || []).map((line) => {\n        const [pre, b, post] = line.split(boldMatcher);\n        return (\n            <>\n                {pre}\n                <strong>{b}</strong>\n                {post}\n            </>\n        )\n    }\n    )\n\nconst Introduction = ({ content }) => {\n    const { body } = content;\n\n    return body.map((paragraph, i) =>\n        <p key={\"intros-\" + i} className=\"my-4 sm:w-2/3\">\n            <MarkBolded content={[paragraph]} />\n        </p>\n    );\n}\n\nconst Changes = ({ content }) => {\n    const changes = content.changes.map(({ from, to }, i) =>\n        <div className=\"flex justify-between py-4\">\n            <div className=\"w-5/12\"><MarkBolded content={[from]} /></div>\n            <div className=\"w-2/12 text-center self-center\">----------</div>\n            <div className=\"w-5/12\"><MarkBolded content={[to]} /></div>\n        </div>\n    )\n\n    return (\n        <div className=\"my-8\">\n            <h3 className=\"mt-16 mb-8\">{content.title}</h3>\n            <div>\n                {changes}\n            </div>\n        </div>\n    )\n}\n\nconst OrderedList = ({ content }) => {\n    const items = content.items.map((item, i) =>\n        <li key={\"items-\" + i} className=\"ml-6 my-4 list-decimal sm:w-2/3\">{item}</li>\n    )\n\n    return (\n        <div className=\"my-8\">\n            <h4>{content.title}</h4>\n            <ol>{items}</ol>\n        </div>\n    )\n}\n\nconst Lists = ({ content }) => {\n    const lists = content.lists.map(({ title, items }, i) => {\n        const itemSet = items.map((item, i) =>\n            <li key={\"items-\" + i} className=\"my-4 sm:w-2/3\">{item}</li>\n        )\n        return (\n            <div className=\"sm:w-1/2\">\n                <h4>{title}</h4>\n                <ul>{itemSet}</ul>\n            </div>\n        )\n    })\n\n    return (\n        <div className=\"my-8 sm:flex\">\n            {lists}\n        </div>\n    )\n}\n\nconst ImageExhibition = ({ content }) => {\n    const { title, rows, summary, style } = content;\n    var imageRows = (rows || []).map((row, i) => {\n        return (\n            <div\n                key={\"image-row\" + i}\n                className=\"my-8 flex w-full h-full overflow-x-scroll sm:overflow-x-hidden\">\n                {\n                    (row.images || []).map((image, j) => {\n                        return (\n                            // <Img key={\"images-\" + i} fluid={image.childImageSharp.fluid} />\n                            <div\n                                key={\"images-\" + i + \";\" + j}\n                                className={style === 'full' ? \"w-full\" : \"w-1/4 pr-8\"}>\n                                <Img fluid={image.childImageSharp.fluid} className=\"border rounded-lg\" />\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        )\n    });\n\n    return (\n        <div className=\"my-8\">\n            <h3 className=\"mt-16 mb-8\">{title}</h3>\n\n            {imageRows}\n\n            <p className=\"my-4 sm:w-2/3\">\n                <MarkBolded content={summary} />\n            </p>\n        </div>\n    )\n}\n\nconst LightBulb = () =>\n    <svg viewBox=\"0 0 86 86\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M43.0653 18.5366C30.8932 18.5366 20.9487 28.4811 20.9487 40.6532C20.9487 47.0177 23.7332 53.1435 28.427 57.2804C31.9275 60.7808 31.6092 68.2591 31.5297 68.3387C31.5297 68.7364 31.6092 69.0547 31.9275 69.3729C32.1661 69.6115 32.5639 69.7707 32.8821 69.7707H53.1689C53.5667 69.7707 53.8849 69.6115 54.1236 69.3729C54.3622 69.1342 54.5213 68.7364 54.5213 68.3387C54.5213 68.2591 54.1236 60.7808 57.624 57.2804C57.7036 57.2008 57.7831 57.1213 57.8627 57.0417C62.4769 52.8252 65.1818 46.8585 65.1818 40.6532C65.1818 28.4811 55.2374 18.5366 43.0653 18.5366ZM55.7942 55.2119C55.7147 55.2915 55.5556 55.4506 55.5556 55.5301C52.4529 58.8715 51.896 64.3609 51.8164 66.9862H34.2346C34.155 64.3609 33.5981 58.6328 30.2568 55.2119C26.0403 51.5523 23.5741 46.2221 23.5741 40.5736C23.5741 29.8336 32.2457 21.162 42.9857 21.162C53.7258 21.162 62.3974 29.8336 62.3974 40.5736C62.3974 46.2221 60.0107 51.5523 55.7942 55.2119Z\" fill=\"#272B2A\" />\n        <path d=\"M42.9858 24.1851C42.2697 24.1851 41.6333 24.8215 41.6333 25.5375C41.6333 26.2535 42.2697 26.89 42.9858 26.89C51.0209 26.89 57.4649 33.4135 57.4649 41.3691C57.4649 42.0851 58.1014 42.7216 58.8174 42.7216C59.5334 42.7216 60.1698 42.0851 60.1698 41.3691C60.2494 31.902 52.5325 24.1851 42.9858 24.1851Z\" fill=\"#272B2A\" />\n        <path d=\"M51.8165 71.2822H34.1551C32.3253 71.2822 30.8137 72.7938 30.8137 74.6236C30.8137 76.4534 32.3253 77.9649 34.1551 77.9649H51.7369C53.6463 77.8854 55.1578 76.4534 55.1578 74.6236C55.1578 72.7938 53.6463 71.2822 51.8165 71.2822ZM51.8165 75.1805H34.1551C33.8368 75.1805 33.5186 74.9418 33.5186 74.544C33.5186 74.1462 33.7573 73.9076 34.1551 73.9076H51.7369C52.0552 73.9076 52.3734 74.1462 52.3734 74.544C52.3734 74.9418 52.1347 75.1805 51.8165 75.1805Z\" fill=\"#272B2A\" />\n        <path d=\"M49.191 79.3174H36.7803C34.9505 79.3174 33.439 80.829 33.439 82.6587C33.439 84.4885 34.9505 86.0001 36.7803 86.0001H49.191C51.0208 86.0001 52.5324 84.4885 52.5324 82.6587C52.5324 80.7494 51.0208 79.3174 49.191 79.3174ZM49.191 83.2156H36.7803C36.4621 83.2156 36.1439 82.977 36.1439 82.5792C36.1439 82.1814 36.3825 81.9427 36.7803 81.9427H49.191C49.5093 81.9427 49.8275 82.1814 49.8275 82.5792C49.8275 82.977 49.5093 83.2156 49.191 83.2156Z\" fill=\"#272B2A\" />\n        <path d=\"M42.9857 11.9334C43.7813 11.9334 44.3382 11.2969 44.3382 10.5809V1.35245C44.3382 0.636448 43.7017 0 42.9857 0C42.2697 0 41.6333 0.636448 41.6333 1.35245V10.5809C41.6333 11.2969 42.2697 11.9334 42.9857 11.9334Z\" fill=\"#272B2A\" />\n        <path d=\"M65.5002 6.84187C64.8637 6.36454 64.0682 6.6032 63.6704 7.16009L58.5788 14.7975C58.1015 15.4339 58.2606 16.309 58.897 16.7068C59.1357 16.8659 59.3744 16.9455 59.613 16.9455C60.0904 16.9455 60.4882 16.7068 60.7268 16.309L65.8184 8.67166C66.2957 8.11477 66.1366 7.23965 65.5002 6.84187Z\" fill=\"#272B2A\" />\n        <path d=\"M26.8358 16.627C27.0745 16.627 27.3132 16.5475 27.5518 16.3884C28.1883 15.9906 28.3474 15.1155 27.9496 14.479L23.0172 6.76211C22.6194 6.12566 21.7443 5.96655 21.1078 6.36433C20.4714 6.76211 20.3123 7.63722 20.71 8.27367L25.6425 15.9906C25.9607 16.4679 26.3585 16.627 26.8358 16.627Z\" fill=\"#272B2A\" />\n        <path d=\"M17.2096 25.0604L9.17449 20.6848C8.53804 20.3665 7.66292 20.6052 7.3447 21.2417C6.94692 21.8781 7.18559 22.7532 7.90159 23.0715L15.9367 27.447C16.1754 27.5266 16.3345 27.6061 16.5732 27.6061C17.0505 27.6061 17.5279 27.3675 17.7665 26.8901C18.0848 26.2537 17.8461 25.3786 17.2096 25.0604Z\" fill=\"#272B2A\" />\n        <path d=\"M78.7064 21.2417C78.3882 20.6052 77.5131 20.3665 76.8766 20.6848L68.7619 25.0604C68.1255 25.3786 67.8868 26.2537 68.205 26.8901C68.4437 27.3675 68.921 27.6061 69.3984 27.6061C69.637 27.6061 69.8757 27.5266 70.0348 27.447L78.1495 23.0715C78.786 22.7532 79.0247 21.8781 78.7064 21.2417Z\" fill=\"#272B2A\" />\n    </svg>\n\n\nconst KeyInsights = ({ content }) => {\n    const { title, insights } = content;\n\n    const insightSet = insights.map(({ title, body }, i) => (\n        <div key={\"insights-\" + i}>\n            <h4 className=\"my-4\">{title}</h4>\n            <p className=\"my-4\">{body}</p>\n        </div>\n    ))\n\n    return (\n        <div className={title ? \"mt-16 mb-8\" : \"my-8\"}>\n            <div className=\"sm:flex sm:flex-wrap sm:items-center sm:justify-between\">\n                {title && <div className=\"my-4 w-3/12 m-auto sm:w-2/12 sm:p-8 sm:order-3 sm:mr-32\">\n                    <LightBulb />\n                </div>}\n                <div className=\"sm:w-2/3\">\n                    {title && <h3 className=\"my-4\">{title}</h3>}\n                    <div className=\"my-4\">{insightSet}</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst IdentifyIssues = ({ content }) => {\n    const { title, issues } = content;\n\n    const issuesSet = (issues || []).map(({ title, body, prompt }, i) => (\n        <div key={\"insights-\" + i} className=\"flex\">\n            <div className=\"w-1/3\">\n                <h4 className=\"my-4\">{title}</h4>\n            </div>\n            <div className=\"w-2/3\">\n                <p className=\"my-4\">{body}</p>\n                <p className=\"my-4 font-bold\">{prompt}</p>\n            </div>\n        </div>\n    ))\n\n    return (\n        <div className={title ? \"mt-16 mb-8\" : \"my-8\"}>\n            <h3 className=\"my-4\">{title}</h3>\n            <div className=\"my-4\">{issuesSet}</div>\n        </div>\n    )\n}\n\nconst ProcessionalGuide = ({ content }) => {\n    const { body, title } = content;\n    return (\n        <div className=\"mt-16 mb-8\">\n            {title && <h3 className=\"my-4\">{title}</h3>}\n\n            {body.map((paragraph, i) =>\n                <p className=\"my-4 sm:w-2/3\" key={\"pg\" + i}>{paragraph}</p>\n            )}\n        </div>\n    );\n}\n\nconst Section = ({ section }) => {\n    const contents = section.contents.map((section, i) => {\n        const key = \"contents-\" + i;\n        switch (section.type) {\n            case \"Heading\":\n                return <Title key={key} content={section} />\n            case \"Introduction\":\n                return <Introduction key={key} content={section} />\n            case \"Changes\":\n                return <Changes key={key} content={section} />\n            case \"OrderedList\":\n                return <OrderedList key={key} content={section} />\n            case \"Lists\":\n                return <Lists key={key} content={section} />\n            case \"ImageExhibition\":\n                return <ImageExhibition key={key} content={section} />\n            case \"KeyInsights\":\n                return <KeyInsights key={key} content={section} />\n            case \"IdentifyIssues\":\n                return <IdentifyIssues key={key} content={section} />\n            case \"ProcessionalGuide\":\n                return <ProcessionalGuide key={key} content={section} />\n            default:\n                return <h1>missing section type</h1>\n        };\n    })\n    return <section>{contents}</section>;\n}\n\nexport const sectionFragment = graphql`\n    fragment Sections on ContentYaml {\n        sections {\n            id\n            contents {\n                type\n                title\n                style\n                body\n                items\n                lists {\n                    title\n                    items\n                }\n                rows {\n                    images {\n                        childImageSharp {\n                            fluid(maxWidth: 1280) {\n                                ...GatsbyImageSharpFluid\n                            }\n                            fixed(width: 200) {\n                                ...GatsbyImageSharpFixed\n                            }\n                        }\n                    }\n                }\n                changes {\n                    from\n                    to\n                }\n                summary\n                issues {\n                    title\n                    body\n                    prompt\n                }\n                insights {\n                    title\n                    body\n                }\n            }\n        }\n    }\n`\n\nexport default Section","import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from './layout'\nimport SEO from './seo'\n\nimport Overview from './case_study/overview'\nimport Section from './case_study/section'\n\nexport const pageQuery = graphql`\n    query CaseStudy {\n        allContentYaml {\n            edges {\n                node {\n                    title\n                    next {\n                        path\n                        text\n                    }\n                    ...Overview\n                    ...Sections\n                }\n            }\n        }\n    }\n`\n\nconst CaseStudy = ({ data, pageContext }) => {\n    const caseStudy = data.allContentYaml.edges[pageContext.edge].node;\n    const sections = caseStudy.sections.map((section, i) =>\n        <Section key={\"section\" + i} section={section} />\n    )\n    return (\n        <Layout>\n            <SEO title={caseStudy.title} />\n            <Overview overview={caseStudy.overview} title={caseStudy.title} />\n            {sections}\n\n            <div className=\"flex justify-center\">\n                <Link to={\"/\" + caseStudy.next.path} className=\"text-btn py-1 px-3 my-8 border border-current text-pumpkin rounded inline-flex items-center justify-center\">\n                    <span>{caseStudy.next.text}</span>\n                    <svg className=\"w-2 h-3 ml-2\" viewBox=\"0 0 7 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M5.82386e-05 10.7629L0.716129 11.5L6.37866 6.00018L0.71613 0.500001L5.90713e-05 1.23725L4.90306 6.00018L5.82386e-05 10.7629Z\"\n                            fill=\"#DF5F02\" />\n                    </svg>\n                </Link>\n            </div>\n\n        </Layout>\n    )\n}\n\nexport default CaseStudy;\n"],"sourceRoot":""}