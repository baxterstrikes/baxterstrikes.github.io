{"version":3,"sources":["webpack:///./src/components/case_study/overview.js","webpack:///./src/components/case_study/section.js","webpack:///./src/components/case-study.js"],"names":["AtAGlance","title","lis","items","map","item","i","className","key","ProblemStatement","problem","solution","Overview","overview","fluid","image","childImageSharp","areasOfFocus","importantDetails","Title","content","Introduction","body","paragraph","OrderedList","ImageExhibition","images","summary","imageSet","reduce","set","push","KeyInsights","insightSet","insights","ProcessionalGuide","Section","contents","section","type","pageQuery","CaseStudy","data","pageContext","caseStudy","allContentYaml","edges","edge","node","sections"],"mappings":"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","file":"component---src-components-case-study-js-1994e103aeba77a1dd9e.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nconst AtAGlance = ({ title, items }) => {\n    const lis = items.map((item, i) =>\n        <li\n            className=\"my-4\"\n            key={title + i}>\n            {item}\n        </li>\n    )\n    return (\n        <div>\n            <h4 className=\"my-4\">{title}</h4>\n            <ul>\n                {lis}\n            </ul>\n        </div>\n    )\n}\n\nconst ProblemStatement = ({ problem, solution }) =>\n    <>\n        <div className=\"my-4\">\n            <h4 className=\"inline\">Problem: </h4>\n            <p className=\"inline\">{problem}</p>\n        </div>\n        <div className=\"my-4\">\n            <h4 className=\"inline\">Solution: </h4>\n            <p className=\"inline\">{solution}</p>\n        </div>\n    </>\n\nconst Overview = ({ overview }) => {\n    return (\n        <>\n            <Img fluid={overview.image.childImageSharp.fluid} />\n\n            <AtAGlance\n                title=\"Areas of Focus\"\n                items={overview.areasOfFocus} />\n\n            <AtAGlance\n                title=\"Important Details\"\n                items={overview.importantDetails} />\n\n            <ProblemStatement\n                problem={overview.problem}\n                solution={overview.solution} />\n        </>\n    )\n}\n\nexport const overviewFragment = graphql`\n  fragment Overview on ContentYaml {\n    overview {\n        image {\n            childImageSharp {\n                fluid(maxWidth: 300) {\n                    ...GatsbyImageSharpFluid\n                }\n            }\n        }\n        areasOfFocus\n        importantDetails\n        problem\n        solution\n      }\n  }\n`\n\nexport default Overview\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nconst Title = ({ content }) => (\n    <h2 className=\"my-4\">{content.title}</h2>\n)\n\nconst Introduction = ({ content }) => {\n    const { body } = content;\n    return body.map((paragraph, i) =>\n        <p key={\"intros-\" + i} className=\"my-4\">{paragraph}</p>\n    );\n}\n\nconst OrderedList = ({ content }) => {\n    const items = content.items.map((item, i) =>\n        <li key={\"items-\" + i} className=\"my-4\">{item}</li>\n    )\n    return (\n        <div>\n            <h4>{content.title}</h4>\n            <ol>{items}</ol>\n        </div>\n    )\n}\n\nconst ImageExhibition = ({ content }) => {\n    const { title, images, summary } = content;\n\n    var imageSet = (images || []).reduce((set, image, i) => {\n        set.push(\n            <Img key={\"images-\" + i} fluid={image.childImageSharp.fluid} />\n        )\n        return set\n    }, []);\n\n    return (\n        <div className=\"my-4\">\n            <h3 className=\"my-4\">{title}</h3>\n            {imageSet}\n            <p className=\"my-4\">{summary}</p>\n        </div>\n    )\n}\n\nconst KeyInsights = ({ content }) => {\n    const { title, insights } = content;\n\n    const insightSet = insights.map(({ title, body }, i) => (\n        <div key={\"insights-\" + i}>\n            <h4 className=\"my-4\">{title}</h4>\n            <p className=\"my-4\">{body}</p>\n        </div>\n    ))\n\n    return (\n        <div>\n            <h3 className=\"my-4\">{title}</h3>\n            {insightSet}\n        </div>\n    )\n}\n\nconst ProcessionalGuide = ({ content }) => {\n    const { body } = content;\n    return body.map((paragraph, i) =>\n        <p className=\"my-4\" key={\"pg\" + i}>{paragraph}</p>\n    );\n}\n\nconst Section = ({ section }) => {\n    const contents = section.contents.map((section, i) => {\n        const key = \"contents-\" + i;\n        switch (section.type) {\n            case \"Heading\":\n                return <Title key={key} content={section} />\n            case \"Introduction\":\n                return <Introduction key={key} content={section} />\n            case \"OrderedList\":\n                return <OrderedList key={key} content={section} />\n            case \"ImageExhibition\":\n                return <ImageExhibition key={key} content={section} />\n            case \"KeyInsights\":\n                return <KeyInsights key={key} content={section} />\n            case \"ProcessionalGuide\":\n                return <ProcessionalGuide key={key} content={section} />\n            default:\n                return <h1>missing section type</h1>\n        };\n    })\n    return <section>{contents}</section>;\n}\n\nexport const sectionFragment = graphql`\n    fragment Sections on ContentYaml {\n        sections {\n            id\n            contents {\n                type\n                title\n                body\n                items\n                images {\n                    childImageSharp {\n                        fluid(maxWidth: 300) {\n                            ...GatsbyImageSharpFluid\n                        }\n                    }\n                }\n                summary\n                insights {\n                    title\n                    body\n                }\n            }\n        }\n    }\n`\n\nexport default Section","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from './layout'\nimport SEO from './seo'\n\nimport Overview from './case_study/overview'\nimport Section from './case_study/section'\n\nexport const pageQuery = graphql`\n    query CaseStudy {\n        allContentYaml {\n            edges {\n                node {\n                    title\n                    ...Overview\n                    ...Sections\n                }\n            }\n        }\n    }\n`\n\nconst CaseStudy = ({ data, pageContext }) => {\n    const caseStudy = data.allContentYaml.edges[pageContext.edge].node;\n    const sections = caseStudy.sections.map((section, i) =>\n        <Section key={\"section\" + i} section={section} />\n    )\n    return (\n        <Layout>\n            <SEO title={caseStudy.title} />\n            <h1 className=\"my-4\">{caseStudy.title}</h1>\n            <Overview overview={caseStudy.overview} />\n            {sections}\n        </Layout>\n    )\n}\n\nexport default CaseStudy;\n"],"sourceRoot":""}